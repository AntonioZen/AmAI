import numpy as np
import math
import pandas as pd
import matplotlib.pyplot as plt
from colorama import Fore

def cusum_engine(data):
    rS = 0
    CUSUM = []
    n = len(data)
    xmean = data.mean()
    for i in range(n):
        rS = rS + (data[i] - xmean)
        CUSUM.append(rS)
    #print(CUSUM)
    df_CUSUM = pd.DataFrame({'CUSUM': CUSUM})
    return df_CUSUM

def confidence_level(data, sampling = 1000):

    columns_list = ['Smax', 'Smin', 'Sdiff']
    df = pd.DataFrame(columns=columns_list)
    data_new = data.sample(frac=1)
    CUSUM_0 = cusum_engine(data_new)
    CUSUMdiff0 = CUSUM_0['CUSUM'].max() - CUSUM_0['CUSUM'].min()
    Nbreaks = 0
    print('CUSUMdiff0:', CUSUMdiff0)
    for i in range(sampling-1):
        data_new = data.sample(frac=1).reset_index(drop=True)
        print(data_new)
        CUSUM_simulation = cusum_engine(data_new)
        CUSUM_0['CUSUM_'+str(i)] = CUSUM_simulation
        CUSUMdiff = CUSUM_simulation['CUSUM'].max() - CUSUM_simulation['CUSUM'].min()
        print('CUSUMdiff:', CUSUMdiff)
        if CUSUMdiff < CUSUMdiff0:
            Nbreaks = Nbreaks + 1
        #print('CUSUMdiff:', CUSUMdiff)
    conf_level = Nbreaks / sampling
    return conf_level, CUSUM_0

get_sada = 'C:/amoly/data/data_sim.csv'
sep = ' '
data_sample = pd.read_csv(get_sada,sep)
data = data_sample['N_events']
print(Fore.GREEN)

df = pd.DataFrame()

df['time_series'] = data_sample['N_events']
CUSUM = cusum_engine(data)
df['CUSUM'] = CUSUM['CUSUM']
df.plot()






sampling = 100
confidence_level_value, CUSUM_0 = confidence_level(data, sampling)
print(Fore.LIGHTYELLOW_EX)
print(CUSUM_0)
print(Fore.MAGENTA)
print(confidence_level_value)
CUSUM_0.plot(label = CUSUM_0.columns, figsize = (10,6))

plt.legend(bbox_to_anchor = (1.05, 1), loc = 2, borderaxespad = -4)
plt.show()
